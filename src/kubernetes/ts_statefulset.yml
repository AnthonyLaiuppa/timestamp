#Production Timestamp-API-Server-StatefulSet YAML template
#You can use this yml file for manual testing in the EKS Cluster
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: api-server
  labels:
    name: api-server
spec:
  serviceName: api-server
  replicas: 2
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      name: api-server
      labels:
        name: api-server
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: api-server
          image: example/timestamp
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 1
              memory: 500Mi
            requests:
              cpu: 0.5
              memory: 256Mi
          volumeMounts:
            - name: api-server-logs
              mountPath: /var/api-server-logs
          livenessProbe:
            httpGet:
              path: /timestamp
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 12 # ~2 minutes
          readinessProbe:
            httpGet:
              path: /timestamp
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
            failureThreshold: 12 # ~2 minutes
      securityContext:
        fsGroup: 1000
  volumeClaimTemplates:
  - metadata:
      name: api-server-logs
      # annotations:
      #   volume.beta.kubernetes.io/storage-class: anything
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi

---
apiVersion: v1
kind: Service
metadata:
  name: api-server
spec:
  type: LoadBalancer
  selector:
    name: api-server
  
  #externalTrafficPolicy: Local
  ports:
    -
      name: http
      port: 80
      targetPort: 8080
      protocol: TCP


---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-server-ingress
  annotations:
    #nginx.ingress.kubernetes.io/ssl-redirect: "true"
    #kubernetes.io/tls-acme: "true"
    # "413 Request Entity Too Large" uploading plugins, increase client_max_body_size
    nginx.ingress.kubernetes.io/proxy-body-size: 50m
    nginx.ingress.kubernetes.io/proxy-request-buffering: "off"
    # For nginx-ingress controller < 0.9.0.beta-18
    #ingress.kubernetes.io/ssl-redirect: "true"
    # "413 Request Entity Too Large" uploading plugins, increase client_max_body_size
    ingress.kubernetes.io/proxy-body-size: 50m
    ingress.kubernetes.io/proxy-request-buffering: "off"
spec:
  rules:
  - http:
      paths:
      - path: /
        backend:
          serviceName: api-server-ingress
          servicePort: 80
    host: api.timestamp.com